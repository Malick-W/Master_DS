#!/usr/bin/env python3# -*- coding: utf-8 -*-from mrjob.job import MRJobfrom mrjob.step import MRStepimport reWORD_RE = re.compile(r"[\w']{5,}")class MRMostUsedWord(MRJob):    def mapper(self, _, line):        for word in WORD_RE.findall(line):            yield (word.lower(), 1)    def combiner(self, word, counts):        yield (word, sum(counts))    def reducer_1(self, word, counts):        yield None, (sum(counts), word)  #null[6,"robbed"]    def reducer_2(self, _, word_count_pairs):        yield max(word_count_pairs)    def steps(self):        return [            MRStep(mapper=self.mapper,                   combiner=self.combiner,                   reducer=self.reducer_1),            MRStep(reducer=self.reducer_2)        ]if __name__ == '__main__':    MRMostUsedWord.run()            